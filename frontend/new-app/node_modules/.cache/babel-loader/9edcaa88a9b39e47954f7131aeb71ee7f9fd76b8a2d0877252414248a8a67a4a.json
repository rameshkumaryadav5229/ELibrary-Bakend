{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    if (mode === \"signup\") {\n      await axios.post(\"http://localhost:4000/api/auth/signup\", {\n        name,\n        email,\n        password\n      });\n      alert(\"Signup successful\");\n      setMode(\"userLogin\");\n    } else {\n      const role = mode === \"adminLogin\" ? \"admin\" : \"user\";\n      const {\n        data\n      } = await axios.post(\"http://localhost:4000/api/auth/login\", {\n        email,\n        password,\n        role\n      });\n      localStorage.setItem(\"role\", data.role);\n      localStorage.setItem(\"userId\", data.userId || email); // <-- userId या email रखें\n      alert(`${role} login successful`);\n      if (onLoginSuccess) {\n        onLoginSuccess(data.role);\n      }\n    }\n  } catch (err) {\n    var _err$response, _err$response$data;\n    alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error occurred\");\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","mode","axios","post","name","email","password","alert","setMode","role","data","localStorage","setItem","userId","onLoginSuccess","err","_err$response","_err$response$data","response","message"],"sources":["C:/Users/MUKESH KUMAR YADAV/Desktop/Project-E-library/frontend/new-app/src/components/AuthForm.jsx"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    if (mode === \"signup\") {\r\n      await axios.post(\"http://localhost:4000/api/auth/signup\", {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      alert(\"Signup successful\");\r\n      setMode(\"userLogin\");\r\n    } else {\r\n      const role = mode === \"adminLogin\" ? \"admin\" : \"user\";\r\n      const { data } = await axios.post(\"http://localhost:4000/api/auth/login\", {\r\n        email,\r\n        password,\r\n        role,\r\n      });\r\n      localStorage.setItem(\"role\", data.role);\r\n      localStorage.setItem(\"userId\", data.userId || email); // <-- userId या email रखें\r\n      alert(`${role} login successful`);\r\n\r\n      if (onLoginSuccess) {\r\n        onLoginSuccess(data.role);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    alert(err.response?.data?.message || \"Error occurred\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACF,IAAIC,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMC,KAAK,CAACC,IAAI,CAAC,uCAAuC,EAAE;QACxDC,IAAI;QACJC,KAAK;QACLC;MACF,CAAC,CAAC;MACFC,KAAK,CAAC,mBAAmB,CAAC;MAC1BC,OAAO,CAAC,WAAW,CAAC;IACtB,CAAC,MAAM;MACL,MAAMC,IAAI,GAAGR,IAAI,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;MACrD,MAAM;QAAES;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACC,IAAI,CAAC,sCAAsC,EAAE;QACxEE,KAAK;QACLC,QAAQ;QACRG;MACF,CAAC,CAAC;MACFE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACD,IAAI,CAAC;MACvCE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACG,MAAM,IAAIR,KAAK,CAAC,CAAC,CAAC;MACtDE,KAAK,CAAC,GAAGE,IAAI,mBAAmB,CAAC;MAEjC,IAAIK,cAAc,EAAE;QAClBA,cAAc,CAACJ,IAAI,CAACD,IAAI,CAAC;MAC3B;IACF;EACF,CAAC,CAAC,OAAOM,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZV,KAAK,CAAC,EAAAS,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,gBAAgB,CAAC;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}